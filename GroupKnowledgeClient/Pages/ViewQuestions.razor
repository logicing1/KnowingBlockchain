@page "/questions/{contract}"
@layout MainLayout

@inject NavigationManager navigation;
@inject ISnackbar snackbar;
@inject IGroupState groupState;

<MudToolBar>
    <MudSpacer />
    @if (IsMember)
    {
        <MudTooltip Text="Ask Question" Color="Color.Secondary">
            <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.TwoTone.Quiz" Size="Size.Medium" Color="Color.Primary" Link="@($"/ask/{@Contract}")">Ask New Question</MudButton>
        </MudTooltip>
    }
</MudToolBar>
<MudDivider Class="mb-5" />
<MudGrid>
    @foreach (var question in Group.Questions)
    {
        <MudItem xl="4" lg="6" md="12">
            <QuestionCard Question="@question" />
        </MudItem>
    }
</MudGrid>

@code {

    [Parameter]
    public string Contract { get; set; } = string.Empty;

    private Group Group { get; set; } = Group.Empty;

    private bool IsMember => Group.Balance > 0;

    protected override async Task OnParametersSetAsync()
    {
        var connected = groupState.Connected.TryGetValue(Contract, out var group);
        if (connected && group != null)
        {
            Group = group;
            groupState.Selected = group;
            await Group.Load();
        }
        else
        {
            snackbar.Add("Group Not Connected", Severity.Error);
        }
    }

}