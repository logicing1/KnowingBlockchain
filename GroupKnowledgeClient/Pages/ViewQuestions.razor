@page "/questions/{contract}"
@layout MainLayout

@inject IGroupState groupState;

<MudToolBar>
    <MudSpacer />
    @if (!IsMember)
    {
        <MudTooltip Text="Join Group" Color="Color.Secondary">
            <MudIconButton Icon="@Icons.Material.TwoTone.AccountCircle" Size="Size.Large" Color="Color.Primary" Link="/join" />
        </MudTooltip>
    }
    else
    {
        <MudTooltip Text="Ask Question" Color="Color.Secondary">
            <MudIconButton Icon="@Icons.Material.TwoTone.Quiz" Size="Size.Large" Color="Color.Primary" Link="/ask" />
        </MudTooltip>
        <MudTooltip Text="Withdraw Tokens" Color="Color.Secondary">
            <MudIconButton Icon="@Icons.Material.TwoTone.GeneratingTokens" Size="Size.Large" Color="Color.Primary" Link="/withdraw" />
        </MudTooltip>
    }
</MudToolBar>
<MudDivider Class="mb-5" />
<MudGrid>
    if(@group != default)
    {
        @foreach (var question in group.Questions)
        {
            <MudItem xs="12" sm="8">
                <QuestionCard Question="@question.Content" />
            </MudItem>
        }
    }
</MudGrid>

@code {

    private Group? group;

    [Parameter]
    public string contract { get; set; } = string.Empty;

    private bool IsMember => group?.Balance > 0;

    protected override void OnParametersSet()
    {
        group = groupState?.List?.SingleOrDefault(g => g.Contract == contract);
        if (groupState != default) groupState.Selected = group;
    }

}