@page "/questions/{contract}"
@layout MainLayout

@inject NavigationManager navigation;
@inject ISnackbar snackbar;
@inject IGroupState groupState;

<MudToolBar>
    <MudSpacer />
    @if (IsMember)
    {
        <MudTooltip Text="Ask Question" Color="Color.Secondary">
            <MudButton Variant="Variant.Outlined" StartIcon="@Icons.Material.TwoTone.Quiz" Size="Size.Medium" Color="Color.Primary" Link="@($"/ask/{@Contract}")">Ask New Question</MudButton>
        </MudTooltip>
    }
</MudToolBar>
<MudDivider Class="mb-5" />
 <MudGrid>
     @if (!Group.Questions.Any())
     {
         <MudText Typo="Typo.h6">No Questions have been asked yet.</MudText>
     }
     @foreach (var question in Group.Questions.OrderByDescending(g => g.Index))
     {
         <MudItem xl="4" lg="6" md="12">
             <QuestionCard Question="@question"/>
         </MudItem>
     }
 </MudGrid>

@code {

    [Parameter]
    public string Contract { get; set; } = string.Empty;

    private Group Group { get; set; } = Group.Empty;

    private bool IsMember => Group.MemberBalance > 0;

    protected override async Task OnParametersSetAsync()
    {
        await groupState.Select(Contract);
        Group = groupState.Selected ?? Group.Empty;
        if(Group == Group.Empty)
            snackbar.Add("Group Not Connected", Severity.Error);
    }

}